{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/ContactList/ContactList.module.scss","App.module.scss","components/Filter/Filter.module.scss","components/Container/Container.module.scss","components/Container/Container.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Container","children","className","styles","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleInput","event","target","value","resetInput","Form","preventDefault","Label","Input","id","nanoid","type","onChange","pattern","title","required","Button","ContactList","onFilteredContacts","onDeleteContact","List","map","Item","Contact","onClick","Filter","onFindContact","App","contactsList","contacts","setContacts","filter","setFilter","useEffect","localStorage","getItem","parcedContacts","JSON","parse","setItem","stringify","Title","contact","alreadyFind","find","alert","prevState","normalizedFilter","toLowerCase","includes","getFilterContacts","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12c46bd7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"ContactForm_Form__pmdyI\",\"Label\":\"ContactForm_Label__2Lwof\",\"Input\":\"ContactForm_Input__1tKk0\",\"Button\":\"ContactForm_Button__1WD28\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"ContactList_List__2kG7o\",\"Item\":\"ContactList_Item__2zmUy\",\"Contact\":\"ContactList_Contact__3m8Gx\",\"Button\":\"ContactList_Button__2HINY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"App_Title__274rc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Filter_Label__2sheC\",\"Input\":\"Filter_Input__TN8JA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__11SY1\"};","import styles from \"./Container.module.scss\";\n\nconst Container = ({ children }) => {\n  return <div className={styles.Container}>{children}</div>;\n};\n\nexport default Container;\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport styles from './ContactForm.module.scss';\n\nconst ContactForm = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInput = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    onSubmit({ name, number });\n    resetInput();\n  };\n\n  const resetInput = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={styles.Form} onSubmit={handleSubmit}>\n      <label className={styles.Label}>\n        Name\n        <input\n          className={styles.Input}\n          id={nanoid()}\n          type='text'\n          name='name'\n          value={name}\n          onChange={handleInput}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n\n      <label className={styles.Label}>\n        Number\n        <input\n          className={styles.Input}\n          type='tel'\n          name='number'\n          value={number}\n          onChange={handleInput}\n          pattern='\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}'\n          title='Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n          required\n        />\n      </label>\n\n      <button type='submit' className={styles.Button}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.scss\";\n\nconst ContactList = ({ onFilteredContacts, onDeleteContact }) => {\n  return (\n    <ul className={styles.List}>\n      {onFilteredContacts.map(({ id, name, number }) => (\n        <li key={id} className={styles.Item}>\n          <p className={styles.Contact}>{name}:</p>\n          <p className={styles.Contact}>{number}</p>\n\n          <button\n            type=\"button\"\n            className={styles.Button}\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  filteredContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactList;\n","import PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.scss\";\n\nconst Filter = ({ value, onFindContact }) => {\n  return (\n    <label className={styles.Label}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={value}\n        className={styles.Input}\n        onChange={onFindContact}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n};\n\nexport default Filter;\n","import { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport styles from './App.module.scss';\n\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport contactsList from './contacts.json';\nimport Filter from './components/Filter';\n\nconst App = () => {\n  const [contacts, setContacts] = useState(contactsList);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const contacts = localStorage.getItem('contacts');\n    const parcedContacts = JSON.parse(contacts);\n\n    if (parcedContacts) {\n      setContacts(parcedContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = ({ name, number }) => {\n    const contact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    const alreadyFind = contacts.find(contact => contact.name === name);\n\n    alreadyFind\n      ? alert(`${name} is already in contacts.`)\n      : setContacts(prevState => [contact, ...prevState]);\n  };\n\n  const findContact = event => {\n    setFilter(event.target.value);\n  };\n\n  const getFilterContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n\n  return (\n    <Container>\n      <h1 className={styles.Title}>Phonebook</h1>\n      <ContactForm onSubmit={addContact} />\n\n      <h2 className={styles.Title}>Contacts</h2>\n      <Filter value={filter} onFindContact={findContact} />\n      <ContactList\n        onFilteredContacts={getFilterContacts()}\n        onDeleteContact={deleteContact}\n      />\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}